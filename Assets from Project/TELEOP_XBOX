#!/usr/bin/env python

import rospy
import math
from geometry_msgs.msg import Twist
from sensor_msgs.msg import Joy

def xBox_listener():

    # start node
    rospy.init_node("xBox_joy", anonymous=True)
    # subscribe to joystick messages on topic "joy"
    rospy.Subscriber("joy", Joy, teleOp_callback, queue_size=100)
    # keep node alive until stopped
    rospy.spin()

# called when joy message is received
def teleOp_callback(data):
    # Publish cmd_vel_mux/input/teleop to 
    pub = rospy.Publisher("cmd_vel_mux/input/teleop", Twist, queue_size=100)

    # Send twist messages of user input to joy node
    twist = Twist()
    twist.linear.x = 1.5*data.axes[1] # slight increase in forward acceleration (1.5)
    twist.angular.z = 1*data.axes[0]

    # Prints values of user input to terminal, may not be neccesary
    rospy.loginfo("twist.linear: %f ; angular %f", twist.linear.x, twist.angular.z)

	# publish cmd_vel move command to Turtlesim
    pub.publish(twist)

if __name__ == '__main__':
    try:
        xBox_listener()
    except rospy.ROSInterruptException:
        pass # maybe change this? May need more specific paramter than "pass"
